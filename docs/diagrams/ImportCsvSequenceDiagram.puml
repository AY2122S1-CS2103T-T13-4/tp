@startuml
'https://plantuml.com/sequence-diagram

autonumber

participant MainWindow
participant Logic
participant CsvAddressBookImportExport
participant CsvUtil

participant CsvAdaptedPerson
participant Model
participant Storage
'
'
box "ImportExport" #LightBlue
    participant CsvAddressBookImportExport
    participant CsvUtil
    participant CsvAdaptedPerson
end box

box "Model" #Lavender
    participant Model
end box

'
box "Storage"" #LightBlue
    participant Storage
end box



MainWindow -> Logic: importData()
Logic -> CsvAddressBookImportExport: importIntoAddressBook(model)
CsvAddressBookImportExport -> CsvAddressBookImportExport: importAddressBook(filepath,model)
CsvAddressBookImportExport -> CsvUtil: readCsvFile(filepath)

loop number of  rows in import - 1

    CsvUtil -> CsvAdaptedPerson: <<create>>

    CsvAdaptedPerson -> CsvAdaptedPerson: setDetails(String)

    CsvAdaptedPerson -> CsvAdaptedPerson: setInterestList(String)
    CsvUtil <- CsvAdaptedPerson: valid person
    end

CsvAddressBookImportExport <- CsvUtil: optional(list of valid people)
CsvAddressBookImportExport -> CsvAddressBookImportExport: addImportIntoAddressBook(list, model)

loop Number of valid people
    CsvAddressBookImportExport  -> Model : duplicateIndex()

    CsvAddressBookImportExport <- Model : int of duplicate in list
    alt Import does not has duplicate in current database
        CsvAddressBookImportExport ->  Model: addPerson(person)
    else Import has duplicate in current database
        alt import duplicate has been called
                    CsvAddressBookImportExport ->  Model: updatePerson(index, person)
        end
    end
    end

Logic -> Model: getAddressbook()
Logic -> Storage: saveAddressbook(model)
Logic -> CsvAddressBookImportExport: getImportStatus()

MainWindow <- Logic: status details

@enduml
